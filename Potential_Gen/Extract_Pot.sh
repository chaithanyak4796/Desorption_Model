#PBS -S /bin/bash

#PBS -l select=1:ncpus=4:model=san
#PBS -l walltime=16:00:00
#PBS -J 1-250000:12500
#PBS -j oe

#PBS -q long
#PBS -W group_list=e1543

repeat=0    # repeat a single subjob : 0/1

begin=$PBS_ARRAY_INDEX
end=`expr $PBS_ARRAY_INDEX + 12499`
nchunks=25

echo "Number of chunks in this subjob = "$nchunks
len_chunk=$(((end-begin+1)/nchunks))
echo "Length of each chunk = "$len_chunk

cd $PBS_O_WORKDIR

start_time=`date +%s`

Pos_dir="./pos_files"
Pot_dir="./pot_files"

export Pos_dir
export Pot_dir

mkdir -p $Pos_dir $Pot_dir

##_______________________________________________________________________________________________________________________##

echo " "
echo " Computing the average z_com using z_surf.dat"
z_shift=$( awk  ' NR>=3 { total+=$4; count++ } END {print total/count}' z_surf.dat)
echo "z_shift = $z_shift "

##_______________________________________________________________________________________________________________________##

echo " "
echo " Running LAMMPS to generate potential energy curves for each displaced lattice"

incr=$(sed -n 3p info.dat)
n_at=$(sed -n 4p info.dat)

if [ $repeat -eq 0 ]; then   # If it is a repeat run, we should not add this to info.jobs
    echo ${begin} >> info.jobs
fi
echo ${begin} ${end}

l1=$(echo "$begin*($n_at+9) + 1" | bc)
l2=$(echo "$end*($n_at+9)" | bc)
l3=$(echo "($end-$begin+1)*($n_at+9)" | bc)

pos_fname="./pos_files/coords_"$begin".split"
echo "Splitting coords.pos to "$pos_fname

pot_dir="./pot_files/temp-"$begin
mkdir -p $pot_dir
echo "Storing the individual potential files in "$pot_dir

head -$l2 coords.pos | tail -n $l3 > $pos_fname

for (( cidx=0; cidx<$nchunks; cidx++ ))
do
    c_beg=$((begin+cidx*len_chunk))
    c_end=$((c_beg+len_chunk-1))
    if [ $cidx -eq $((nchunks-1)) ]; then
	c_end=$end
    fi

    echo "Chunk# info : "$cidx $c_beg $c_end
    
    seq -f "%06g"  ${c_beg} ${c_end} | parallel -j 4 --sshloginfile "$PBS_NODEFILE" "cd $PWD; ./RunLAMMPS_Parallel.sh {} $z_shift $n_at $begin $pos_fname $pot_dir"

    echo " "
    echo " Done collecting the potential files for chunk $cidx"

    ##------------------------------ See if any jobs failed and try to run again --------------------------------- ##
    Error_file="Error.$begin"
    if test -f "$Error_file"; then
	echo "Errors found in this job array."
	err=( $(cut -d ' ' -f2 $Error_file) )
	echo "Case numbers of errors : " ${err[@]}
	rm $Error_file

	len=$(( ${#err[@]} - 1 ))

	printf "%s\n" ${err[@]}  | parallel -j 4 --sshloginfile "$PBS_NODEFILE" "cd $PWD; ./RunLAMMPS_Parallel.sh {} $z_shift $n_at $begin $pos_fname $pot_dir"
    
    fi

    ##_______________________________________________________________________________________________________________________##  
    echo " "
    echo "Merging the potential files generated by this sub-job and chunk $cidx."
    source Merge_subjob.sh $begin $end $pot_dir $cidx $nchunks $c_beg $c_end
    echo  "Done Merging the potential files generated by this sub-job and chunkk $cidx."

done
##_______________________________________________________________________________________________________________________##

end_time=`date +%s`
runtime=$((end_time-start_time))
echo "Total RunTime = "${runtime}"s"

